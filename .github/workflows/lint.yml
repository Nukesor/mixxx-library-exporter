name: Lint the code

on:
  push:
    branches:
      - main
      - development
    paths:
      - ".github/**/*"
      - "**.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
  pull_request:
    branches:
      - main
      - development
    paths:
      - ".github/**/*"
      - "**.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"

jobs:
  linting:
    name: Lint on ${{ matrix.os }} for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          target: ${{ matrix.target }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: lint-${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            lint-${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-${{ matrix.target }}-

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --tests --workspace -- -D warnings
