name: Packaging

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish:
    name: Publish on ${{ matrix.os }} for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: target/x86_64-unknown-linux-musl/release/mixxx-library-exporter
            release_name: mixxx-library-exporter-linux-x86_64
            cross: true
            strip: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: target/x86_64-pc-windows-msvc/release/mixxx-library-exporter.exe
            release_name: mixxx-library-exporter-windows-x86_64.exe
            cross: false
            strip: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target=${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: ${{ matrix.artifact_name }}
          args: --lzma
          strip: ${{ matrix.strip }}
        if: matrix.target != 'x86_64-pc-windows-msvc'

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.release_name }}
          tag: ${{ github.ref }}
          overwrite: true
